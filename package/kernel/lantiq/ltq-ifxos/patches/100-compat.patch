Portability fixes:
- Add support for Linux kernel 4.9
  sock_recvmsg() does not take size argument any more
- tar fix for Redhat6

--- a/configure.in
+++ b/configure.in
@@ -5,7 +5,7 @@ AC_PREREQ(2.59)
 AC_INIT(lib_ifxos, 1.6.9, www.lantiq.com)
 AC_CONFIG_SRCDIR([config.h.in])
 AC_CONFIG_HEADER([config.h])
-AM_INIT_AUTOMAKE
+AM_INIT_AUTOMAKE([-Wno-portability tar-pax])
 
 # Checks for programs.
 AC_PROG_CC
--- a/src/linux/ifxos_linux_socket_drv.c
+++ b/src/linux/ifxos_linux_socket_drv.c
@@ -192,7 +192,11 @@ IFX_int_t IFXOS_SocketRecvFrom(
    old_fs = get_fs();
    set_fs(KERNEL_DS);
 
+#if LINUX_VERSION_CODE < KERNEL_VERSION(4,7,0)
    ret = sock_recvmsg ((struct socket *) socFd, &msg, bufSize_byte, 0);
+#else
+   ret = sock_recvmsg ((struct socket *) socFd, &msg, 0);
+#endif
    set_fs(old_fs);
 
    return ret;
--- a/src/linux/ifxos_linux_socket_ipv6_drv.c
+++ b/src/linux/ifxos_linux_socket_ipv6_drv.c
@@ -135,7 +135,11 @@ IFX_int_t IFXOS_SocketRecvFromIpV6(
    old_fs = get_fs();
    set_fs(KERNEL_DS);
 
+#if LINUX_VERSION_CODE < KERNEL_VERSION(4,7,0)
    ret = sock_recvmsg ((struct socket *) socFd, &msg, bufSize_byte, 0);
+#else
+   ret = sock_recvmsg ((struct socket *) socFd, &msg, 0);
+#endif
    set_fs(old_fs);
 
    return ret;
--- a/src/linux/ifxos_linux_memory_map_drv.c
+++ b/src/linux/ifxos_linux_memory_map_drv.c
@@ -25,6 +25,7 @@
    IFX Linux adaptation - Global Includes - Kernel
    ========================================================================= */
 
+#include <linux/version.h>
 #include <linux/kernel.h>
 #ifdef MODULE
    #include <linux/module.h>
@@ -97,8 +98,13 @@ IFX_int32_t IFXOS_Phy2VirtMap(
    }
 
    /* remap memory (not cache able): physical --> virtual */
+#if LINUX_VERSION_CODE < KERNEL_VERSION(5,6,0)
    pVirtAddr = (IFX_uint8_t *)ioremap_nocache( physicalAddr,
                                                addrRangeSize_byte );
+#else
+   pVirtAddr = (IFX_uint8_t *)ioremap(physicalAddr, addrRangeSize_byte);
+#endif
+
    if (pVirtAddr == IFX_NULL)
    {
       IFXOS_PRN_USR_ERR_NL( IFXOS, IFXOS_PRN_LEVEL_ERR, 
